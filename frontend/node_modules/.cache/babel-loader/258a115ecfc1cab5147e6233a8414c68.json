{"ast":null,"code":"var _jsxFileName = \"/Users/aswat/Documents/Personal Projects/Ecommerce-Website/frontend/src/screens/CartScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap';\nimport Message from '../components/Message';\nimport { addToCart } from '../actions/cartActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CartScreen({\n  match,\n  location,\n  history\n}) {\n  _s();\n\n  const productId = match.params.id;\n  const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1;\n  const dispatch = useDispatch();\n  const cart = useSelector(state => state.cart);\n  const {\n    cartItems\n  } = cart;\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n  }, [dispatch, productId, qty]);\n\n  const removeFromCartHandler = id => {\n    console.log(id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      md: 8,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Shopping Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), cartItems.length === 0 ? /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"info\",\n        children: [\"Your cart is empty, \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Go Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 49\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(ListGroup, {\n        variant: \"flush\",\n        children: cartItems.map(item => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: 2,\n              children: /*#__PURE__*/_jsxDEV(Image, {\n                src: item.image,\n                alt: item.name,\n                fluid: true,\n                rounded: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 3,\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/product/${item.product}`,\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 2,\n              children: [\"$\", item.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 3,\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"select\",\n                value: item.qty,\n                onChange: e => dispatch(addToCart(item.product, e.target.value)),\n                children: [...Array(item.countInStock).keys()].map(x => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: x + 1,\n                  children: [\" \", x + 1, \" \"]\n                }, x + 1, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 57\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 1,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"button\",\n                variant: \"light\",\n                onClick: () => removeFromCartHandler(item.product),\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-trash\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 37\n          }, this)\n        }, item.product, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 4,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Subtotal (\", cartItems.reduce((acc, item) => acc + item.qty, 0), \") items\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CartScreen, \"1b/6BcrzFg90k2qO1tRu8krUc0E=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = CartScreen;\nexport default CartScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartScreen\");","map":{"version":3,"sources":["/Users/aswat/Documents/Personal Projects/Ecommerce-Website/frontend/src/screens/CartScreen.js"],"names":["React","useEffect","Link","useDispatch","useSelector","Row","Col","ListGroup","Image","Form","Button","Card","Message","addToCart","CartScreen","match","location","history","productId","params","id","qty","search","Number","split","dispatch","cart","state","cartItems","removeFromCartHandler","console","log","length","map","item","image","name","product","price","e","target","value","Array","countInStock","keys","x","reduce","acc"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap';\nimport Message from '../components/Message';\nimport { addToCart } from '../actions/cartActions'\n\nfunction CartScreen({ match, location, history }) {\n    const productId = match.params.id;\n    const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1;\n    const dispatch = useDispatch();\n    const cart = useSelector(state => state.cart);\n    const { cartItems } = cart;\n\n    useEffect(() => {\n        if(productId) {\n            dispatch(addToCart(productId, qty));\n        }\n    }, [dispatch, productId, qty]);\n\n    const removeFromCartHandler = (id) => {\n        console.log(id);\n    }\n    return (\n        <Row>\n            <Col md={8}>\n                <h1>Shopping Cart</h1>\n                {cartItems.length === 0 ? \n                    (\n                        <Message variant=\"info\">\n                            Your cart is empty, <Link to=\"/\">Go Back</Link>\n                        </Message>\n                    )\n                    :\n                    (\n                        <ListGroup variant=\"flush\">\n                            {cartItems.map(item => (\n                                <ListGroup.Item key={item.product}>\n                                    <Row>\n                                        <Col md={2}>\n                                            <Image src={item.image} alt={item.name} fluid rounded></Image>\n                                        </Col>\n                                        <Col md={3}>\n                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                        </Col>\n                                        <Col md={2}>\n                                            ${item.price}\n                                        </Col>\n                                        <Col md={3}>\n                                            <Form.Control\n                                                as=\"select\"\n                                                value={item.qty}\n                                                onChange= {(e) => dispatch(addToCart(item.product, e.target.value))}\n                                            >\n                                                {\n                                                    [...Array(item.countInStock).keys()].map((x) => (\n                                                        <option key={x + 1} value={x + 1}> {x + 1} </option>\n                                                    ))\n                                                }\n                                            </Form.Control>\n                                        </Col>\n                                        <Col md={1}>\n                                            <Button\n                                                type=\"button\"\n                                                variant=\"light\"\n                                                onClick={() => removeFromCartHandler(item.product)}\n                                            >\n                                                <i className='fas fa-trash'></i>\n                                            </Button>\n                                        </Col>\n                                    </Row>\n                                </ListGroup.Item>\n                            ))}\n                        </ListGroup>\n                    )\n                }\n            </Col>\n            <Col md={4}>\n                <Card>\n                <ListGroup variant=\"flush\">\n                        <ListGroup.Item>\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Card>\n            </Col>\n        </Row>\n    )\n}\n\nexport default CartScreen\n"]},"metadata":{},"sourceType":"module"}